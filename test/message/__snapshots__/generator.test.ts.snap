// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`linked key: hi @:name ! 1`] = `
"function __msg__ (ctx) {
  return ctx.process([
    \\"hi \\", ctx.message(\\"name\\")(ctx), \\" !\\"
  ])
}"
`;

exports[`linked list: hi @:{0} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.process([
    \\"hi \\", ctx.message(ctx.interpolate(ctx.list(0)))(ctx), \\" !\\"
  ])
}"
`;

exports[`linked modifier: hi @.upper:(name) ! 1`] = `
"function __msg__ (ctx) {
  return ctx.process([
    \\"hi \\", ctx.modifier(\\"upper\\")(ctx.message(\\"name\\")(ctx)), \\" !\\"
  ])
}"
`;

exports[`linked named: hi @:{name} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.process([
    \\"hi \\", ctx.message(ctx.interpolate(ctx.named(\\"name\\")))(ctx), \\" !\\"
  ])
}"
`;

exports[`list basic: hi {0} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.process([
    \\"hi \\", ctx.interpolate(ctx.list(0)), \\" !\\"
  ])
}"
`;

exports[`list multiple: {0} {1} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.process([
    ctx.interpolate(ctx.list(0)), \\" \\", ctx.interpolate(ctx.list(1)), \\" !\\"
  ])
}"
`;

exports[`named basic: hi {name} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.process([
    \\"hi \\", ctx.interpolate(ctx.named(\\"name\\")), \\" !\\"
  ])
}"
`;

exports[`named multiple: {greeting} {name} ! 1`] = `
"function __msg__ (ctx) {
  return ctx.process([
    ctx.interpolate(ctx.named(\\"greeting\\")), \\" \\", ctx.interpolate(ctx.named(\\"name\\")), \\" !\\"
  ])
}"
`;

exports[`plural complex: @.caml:(no apples) | {0} apple | {n}　apples 1`] = `
"function __msg__ (ctx) {
  return [
    ctx.process([
      ctx.modifier(\\"caml\\")(ctx.message(\\"no apples\\")(ctx))
    ]), ctx.process([
      ctx.interpolate(ctx.list(0)), \\" apple\\"
    ]), ctx.process([
      ctx.interpolate(ctx.named(\\"n\\")), \\"　apples\\"
    ])
  ][ctx.pluralRule(ctx.pluralIndex, 3, ctx.orgPluralRule)]
}"
`;

exports[`plural simple: no apples | one apple  |  too much apples   1`] = `
"function __msg__ (ctx) {
  return [
    ctx.process([
      \\"no apples\\"
    ]), ctx.process([
      \\"one apple\\"
    ]), ctx.process([
      \\"too much apples  \\"
    ])
  ][ctx.pluralRule(ctx.pluralIndex, 3, ctx.orgPluralRule)]
}"
`;

exports[`text basic: hello world 1`] = `
"function __msg__ (ctx) {
  return ctx.process([
    \\"hello world\\"
  ])
}"
`;

exports[`text multline: hello
 world 1`] = `
"function __msg__ (ctx) {
  return ctx.process([
    \\"hello\\\\n world\\"
  ])
}"
`;
